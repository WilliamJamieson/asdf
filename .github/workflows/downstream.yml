name: Downstream

env:
  CRDS_SERVER_URL: https://jwst-crds.stsci.edu
  CRDS_PATH: /tmp/crds_cache
  CRDS_CLIENT_RETRY_COUNT: 3
  CRDS_CLIENT_RETRY_DELAY_SECONDS: 20

on:
  workflow_dispatch:
  schedule:
    # Run every Monday at 6am UTC
    - cron: '0 6 * * 1'
  pull_request:
    # We also want this workflow triggered if the `Downstream CI` label is
    # added or present when PR is updated
    types:
      - synchronize
      - labeled
  push:
    branches:
      - '*.*.x'
    tags:
      - '*'

jobs:
  asdf:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    if: (github.repository == 'asdf-format/asdf' && (github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'Downstream CI')))
    with:
      submodules: false
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.10'
      envs: |
        - linux: asdf-wcs-schemas
        - linux: asdf-coordinates-schemas

  astropy:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    if: (github.repository == 'asdf-format/asdf' && (github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'Downstream CI')))
    with:
      submodules: false
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.10'
      envs: |
        - linux: astropy
        - linux: specutils
        - linux: asdf-astropy

  cache_crds:
    runs-on: ubuntu-latest
    outputs:
      pmap: ${{ steps.crds-context.outputs.pmap }}
      path: ${{ steps.crds-context.outputs.path }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install crds
      # Get default CRDS_CONTEXT without installing crds client
      # See https://hst-crds.stsci.edu/static/users_guide/web_services.html#generic-request
      - run: |
          echo "pmap=$(
          curl -s -X POST -d '{"jsonrpc": "1.0", "method": "get_default_context", "params": ["jwst"], "id": 1}' ${{ env.CRDS_SERVER_URL }}/json/ |
          python -c "import sys, json; print(json.load(sys.stdin)['result'])"
          )" >> $GITHUB_OUTPUT
          echo "path=${{ env.CRDS_PATH }}" >> $GITHUB_OUTPUT
        id: crds-context
      - uses: actions/cache@v3
        with:
          path: ${{ env.CRDS_PATH }}
          key: ${{ steps.crds-context.outputs.pmap }}
      # re-fetch the context this time with the cache directory to store the file
      - run: crds list --operational-context
      - run: crds sync --contexts ${{ steps.crds-context.outputs.pmap }}
        if: ${{ steps.crds-context.outputs.pmap != '' }}

  stsci:
    needs: [cache_crds]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    if: (github.repository == 'asdf-format/asdf' && (github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'Downstream CI')))
    with:
      cache-path: ${{ needs.cache_crds.path }}
      cache-key: ${{ needs.cache_crds.pmap }}
      submodules: false
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.10'
      envs: |
        - linux: gwcs
        - linux: jwst
        - linux: stdatamodels
        - linux: roman_datamodels

  third-party:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    if: (github.repository == 'asdf-format/asdf' && (github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'Downstream CI')))
    with:
      submodules: false
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.10'
      envs: |
        - linux: weldx
        - linux: sunpy
        - linux: dkist
